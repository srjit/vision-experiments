
\documentclass{article}
%\usepackage[utf8]{inputenc}
%\usepackage[a4paper, total={7in, 8in}]{geometry}
\usepackage[left=15mm,top=26mm,right=8mm,bottom=15mm]{geometry}

\usepackage{spverbatim}
\usepackage{minted}
\usepackage{amssymb}
\usepackage{bm}
\usepackage{graphicx}
\usepackage{amsmath}

%\setlength{\voffset}{-0.75in}
%\setlength{\headsep}{-10pt}


\title{EECE 5639- Homework 4}
\author{Sreejith Sreekumar: 001277209}
\date{\today}
\begin{document}

\maketitle

\section*{Question 1}
\begin{enumerate}
\item 
\item There are 8 degrees of freedom for this transformation.
\item 4 point correspondences are required for this transformation.
\item Yes. If more points are available, the caliberation necessary for improving the
  accuracy can be done more precisely with linear least squares.
\item Invarients include concurrency, collinearity, order of contact, tangent discontinuities and cusps,
  cross ratio of 4 collinear points and measurements in a canonical frame.
\item   Invarients include parallelism, ratio of areas, ratio of lengths on collinear or parallel lines.
\item  If both sets have the vanishing point at infinity, then the building is franto parallel.  
\end{enumerate}

\section*{Question 2}

\begin{minted}{Matlab}

% create the image
image = zeros(8,8);
image(6,1) = 1;
image(7,2) = 1;
image(8,2) = 1;
image(6,3) = 1;
image(2,2) = 2;
image(6,2) = 2;
image(2,4) = 2;
image(6,6) = 2;
image(4,7) = 2;
image(5,7) = 2;
image(6,8) = 2;
image(3,2) = 2;
image(2,3) = 4;
image(4,3) = 2;
image(6,7) = 4;


%create the patch
template = zeros(3,3);
template(1,1) = 1;
template(1,3) = 1;
template(2,2) = 1;
template(3,2) = 1;
template(1,2) = 2;

\end{minted}  

\begin{enumerate}
\item  Calculation of SSD \\
  \begin{minted}{Matlab}
% calculation of SSD
f = image;
g = template;
ssd = zeros(8,8);

for i = 2:7
    for j = 2: 7
           var  = (f(i-1, j-1) - g(1,1)).^2 + ...
                + (f(i-1, j) - g(1,2)).^2+ ...
                + (f(i-1, j+1) - g(1,3)).^2 + ...
                + (f(i, j-1) - g(2,1)).^2 + ...
                + (f(i,j) - g(2,2)).^2 + ...
                + (f(i,j+1) - g(2,3)).^2 + ...
                + (f(i+1,j-1) - g(3,1)).^2 + ...
                + (f(i+1,j) - g(3,2)).^2 + ...
                + (f(i+1,j+1) - g(3,3)).^2;
       ssd(i,j) = sum(sum(var));
    end
end
        

ssd(1,:) = 0;
ssd(:,1) = 0;
ssd(8,:) = 0;
ssd(:,8) = 0;

disp("SSD is:");
disp(ssd)


SSD is:
     0     0     0     0     0     0     0     0
     0    24    28    24    12     8     8     0
     0    16    12    16     8    12     8     0
     0     8     8    12     8    16     8     0
     0    10     7     9    12    28    20     0
     0     9    12     9    12    24    20     0
     0     0     7     7     8    12     8     0
     0     0     0     0     0     0     0     0
  \end{minted}

\item Calculation of correlation

  \begin{minted}{Matlab}
cross_correlation_score = imfilter(image,template);
cross_correlation_score(1,:) = 0;
cross_correlation_score(:,1) = 0;
cross_correlation_score(8,:) = 0;
cross_correlation_score(:,8) = 0;
disp("Cross Correlation score");
disp(cross_correlation_score);

Cross Correlation score

     0     0     0     0     0     0     0     0
     0     4     4     2     0     0     0     0
     0    10    14     8     2     0     2     0
     0     4     4     0     0     0     4     0
     0     4     5     2     0     4    10     0
     0     3     1     0     0     4     8     0
     0     8     4     1     2     8    12     0
     0     0     0     0     0     0     0     0
     
  \end{minted}

\item Calculation of Normalized Cross Correlation

  \begin{minted}{Matlab}
normalized_image = zeros(8,8);
normalized_template = zeros(3,3);

for i=2:7
    for j=2:7
      denominator = f(i-1, j-1) .^2 + ...
                  + f(i-1, j) .^2 + ...
                  + f(i-1, j+1) .^2 + ...
                  + f(i, j-1) .^2 ...
                  + f(i,j) .^2 ...
                  + f(i,j+1) .^2 ...
                  + f(i+1,j-1) .^2 ...
                  + f(i+1,j) .^2 ...
                  + f(i+1,j+1) .^2;
       denominator = sqrt(denominator);
       normalized_image(i,j) = (f(i,j) / denominator);
    end
end

denominator = sqrt(g(1,1).^2 + g(1,2).^2 + g(1,3).^2 + g(2,1).^2 ...
    + g(2,2).^2 + g(2,3).^2 + g(3,1).^2 + g(3,2).^2 + g(3,3).^2);

normalized_template(2,2) = g(2,2)/denominator;
    
normalized_cross_correlation = imfilter(normalized_image,template);

disp("Normalized Cross Correlation");
disp(normalized_cross_correlation);
\end{minted}

\end{enumerate}    

\end{document}


